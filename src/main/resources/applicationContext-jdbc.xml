<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-3.0.xsd
 http://www.springframework.org/schema/aop
 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
 http://www.springframework.org/schema/tx
 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">
	<!--  
	<bean id="mySQLDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${mySQLJdbc.driverClassName}"/>
		<property name="url" value="${mySQLJdbc.url}" />
		<property name="username" value="${mySQLJdbc.username}" />
		<property name="password" value="${mySQLJdbc.password}" />
		<property name="maxActive" value="${mySQLJdbc.maxActive}" />
		<property name="maxIdle" value="${mySQLJdbc.maxIdle}" />
		<property name="maxWait" value="${mySQLJdbc.maxWait}" />
	</bean>
	-->
	<bean id="mysqlDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${mySQLJdbc.driverClassName}"/>
		<property name="url" value="${mySQLJdbc.url}" />
		<property name="username" value="${mySQLJdbc.username}" />
		<property name="password" value="${mySQLJdbc.password}" />
		<property name="maxActive" value="${mySQLJdbc.maxActive}" />
		<property name="maxIdle" value="${mySQLJdbc.maxIdle}" />
		<property name="maxWait" value="${mySQLJdbc.maxWait}" />
	</bean>
	<!-- 定义拦截器，用来指定事物属性，级别，和异常处理 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<!-- PROPAGATION_SUPPORTS: 如果已经存在事务,则加入事务;如果没有事务,则以非事务的方式执行; PROPAGATION_MANDATORY: 
					使用当前事务, 如果没有, 则抛出异常; PROPAGATION_REQUIRED_NEW: 新建事务,如果当前有事务, 则挂起; PROPAGATION_NOT_SUPPORTED:以非事务的方式执行, 
					如果当前有事务, 则挂起; PROPAGATION_NEVER:以非事务的方式执行, 如果当前有事务,则抛出异常; <prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop> 
					PROPAGATION_SUPPORTS 表示事物的属性，readonly 操作权限 <prop key="find*">PROPAGATION_SUPPORTS,readOnly，+/-Exception</prop> 
					+ 表示异常出现时事物提交 - 表示异常出现时十五回滚 -->
				<prop key="retrive*">PROPAGATION_SUPPORTS</prop>
				<prop key="delete*"> PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<bean id="BeanProxy"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<!--对类名以Service结尾的类进行代理 -->
			<value>*Service</value>
		</property>
		<!--对代理类进行加载拦截器（实现通知的过程） -->
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- 
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mySQLDataSource"></property>
	</bean>
	
	<bean id="mySQLJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="mySQLDataSource" />
	</bean>
	
	<bean id="mySQLDBHelper" class="cn.com.database.helper.MySQLDBHelper">
		<property name="jdbcTemplate">
			<ref bean="mySQLJdbcTemplate" />
		</property>
	</bean>
	 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysqlDataSource"></property>
	</bean>
	
	<bean id="mysqlJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="mysqlDataSource" />
	</bean>
	
	<bean id="mysqlDBHelper" class="cn.com.database.helper.MySQLDBHelper">
		<property name="jdbcTemplate">
			<ref bean="mysqlJdbcTemplate" />
		</property>
	</bean>

	<!-- spring mvc的全局配置，对所有的action请求，在其前面均加上/，返回的页面自动加上。jsp -->

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<bean id="taskJob" class="cn.com.xtgl.controller.MonthCountController">
		<property name="mysqlDBHelperTask">
			<ref bean="mysqlDBHelper" />
		</property>
	</bean>
</beans>
